# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
default $http_x_forwarded_proto;
''      $scheme;
}

# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $proxy_connection {
default upgrade;
'' close;
}

map "${sent_http_etag}${sent_http_last_modified}${sent_http_cache_control}${request_method}${status}" $expires {
default off;
'GET200'      6h;
}

server {
    listen       8080;
    server_tokens off;
    add_header X-Content-Type-Options nosniff;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        ssi on;
        root   /usr/share/nginx/html/;
        index 50x.html;
        internal;
    }

    error_page   404  /404.html;
    location = /404.html {
        ssi on;
        root   /usr/share/nginx/html/;
        index 404.html;
        internal;
    }

 
    location / {
        expires modified +12h;
        add_header Cache-Control public;

        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location /stub_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
}

gzip on;
gzip_proxied no_etag;
gzip_types text/plain text/comma-separated-values image/svg+xml text/xml text/css application/x-javascript application/javascript application/xml  application/xml+rss text/csv application/json text/javascript application/xhtml+xml;
gzip_vary on;
gzip_disable "MSIE [1-6]\.(?!.*SV1)";
